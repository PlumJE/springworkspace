<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yedam.app.dept.mapper.DeptMapper">
	<!-- 전체조회 -->
	<select id="selectDeptList" resultType="DeptVO">
		SELECT department_id
			, department_name
			, manager_id
			, location_id
		FROM departments
		ORDER BY department_id
	</select>
	
	<!-- 단건조회 -->
	<select id="selectDeptInfo" parameterType="DeptVO" resultType="DeptVO">
		SELECT department_id
			, department_name
			, manager_id
			, location_id
		FROM departments
		WHERE department_id = #{departmentId}
		<!-- Mybatis =>
			PrepareStatement =>
			데이터 타입에 따른 작업 -->
		<!-- #{} : parameterType에 선언된 변수의 필드를 넣는다-->
	</select>
	
	<!-- 등록 -->
	<insert id="insertDeptInfo" parameterType="DeptVO">
		<selectKey keyProperty="departmentId" resultType="Integer" order="BEFORE">
		<!-- KeyProperty는 결과를 담을 필드/변수를 뜻한다 -->
			SELECT NVL(MAX(department_id), 100) + 1
			FROM departments
		</selectKey>
		INSERT INTO departments
			(
				department_id
				, department_name
				, manager_id
				, location_id
			)
		VALUES
			(
				#{departmentId}
				, #{departmentName}
				, #{managerId}
				, #{locationId}
			)
	</insert>
	
	<!-- 수정 -->
	<update id="updateDeptInfo" parameterType="DeptVO">
		UPDATE departments
		SET
			department_name = #{departmentName}
			, manager_id = #{managerId}
			, location_id = #{locationId}
		WHERE department_id = #{departmentId}
	</update>
	
	<!-- 삭제 -->
	<delete id="deleteDeptVO" parameterType="int">
		<!-- 객체가 아닌 기본 타입일 경우 매개변수 이름 그대로 사용 -->
		DELETE FROM departments
		WHERE department_id = #{deptId}
	</delete>
</mapper>